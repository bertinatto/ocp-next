From f132f6ab21b8b43d484d3a0f946b1ceec175630e Mon Sep 17 00:00:00 2001
From: Ryan Phillips <ryan@trolocsis.com>
Date: Fri, 11 Jun 2021 15:27:56 -0500
Subject: [PATCH] UPSTREAM: <carry>: only chown if non-windows machine

Upstream worked on under https://github.com/kubernetes/kubernetes/pull/102868

OpenShift-Rebase-Source: 5032546e78b
---
 pkg/volume/util/atomic_writer.go | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/pkg/volume/util/atomic_writer.go b/pkg/volume/util/atomic_writer.go
index 7a1f0515e9e..11d5e266a03 100644
--- a/pkg/volume/util/atomic_writer.go
+++ b/pkg/volume/util/atomic_writer.go
@@ -399,6 +399,7 @@ func (w *AtomicWriter) newTimestampDir() (string, error) {
 // writePayloadToDir writes the given payload to the given directory.  The
 // directory must exist.
 func (w *AtomicWriter) writePayloadToDir(payload map[string]FileProjection, dir string) error {
+	isNotWindows := runtime.GOOS != "windows"
 	for userVisiblePath, fileProjection := range payload {
 		content := fileProjection.Data
 		mode := os.FileMode(fileProjection.Mode)
@@ -426,9 +427,11 @@ func (w *AtomicWriter) writePayloadToDir(payload map[string]FileProjection, dir
 		if fileProjection.FsUser == nil {
 			continue
 		}
-		if err := os.Chown(fullPath, int(*fileProjection.FsUser), -1); err != nil {
-			klog.Errorf("%s: unable to change file %s with owner %v: %v", w.logContext, fullPath, int(*fileProjection.FsUser), err)
-			return err
+		if isNotWindows {
+			if err := os.Chown(fullPath, int(*fileProjection.FsUser), -1); err != nil {
+				klog.Errorf("%s: unable to change file %s with owner %v: %v", w.logContext, fullPath, int(*fileProjection.FsUser), err)
+				return err
+			}
 		}
 	}
 
-- 
2.43.0

