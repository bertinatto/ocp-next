From cae029e4815771e94e3a2281ea066c9bd92312f1 Mon Sep 17 00:00:00 2001
From: Abu Kashem <akashem@redhat.com>
Date: Fri, 29 Apr 2022 17:51:54 -0400
Subject: [PATCH] UPSTREAM: <carry>: fix [sig-auth] ServiceAccounts no
 secret-based service account token should be auto-generated

OpenShift-Rebase-Source: a03143879c0
---
 test/e2e/auth/service_accounts.go | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/test/e2e/auth/service_accounts.go b/test/e2e/auth/service_accounts.go
index a47b07d816d..42471fc0881 100644
--- a/test/e2e/auth/service_accounts.go
+++ b/test/e2e/auth/service_accounts.go
@@ -48,7 +48,6 @@ import (
 	utilptr "k8s.io/utils/pointer"
 
 	"github.com/onsi/ginkgo/v2"
-	"github.com/onsi/gomega"
 )
 
 const rootCAConfigMapName = "kube-root-ca.crt"
@@ -63,7 +62,11 @@ var _ = SIGDescribe("ServiceAccounts", func() {
 			time.Sleep(10 * time.Second)
 			sa, err := f.ClientSet.CoreV1().ServiceAccounts(f.Namespace.Name).Get(ctx, "default", metav1.GetOptions{})
 			framework.ExpectNoError(err)
-			gomega.Expect(sa.Secrets).To(gomega.BeEmpty())
+
+			// TODO: OpenShift creates a Secret with a prefix "default-dockercfg", is the
+			//  following assertion valid?
+			framework.ExpectEqual(len(sa.Secrets), 1)
+			framework.ExpectEqual(strings.HasPrefix(sa.Secrets[0].Name, "default-dockercfg"), true)
 		}
 	})
 
-- 
2.41.0

