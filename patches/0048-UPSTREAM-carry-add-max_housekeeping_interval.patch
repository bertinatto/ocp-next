From 92753257bd7ba762fa7c15d65f02b3268c51cf95 Mon Sep 17 00:00:00 2001
From: Ryan Phillips <ryan@trolocsis.com>
Date: Wed, 7 Jul 2021 11:25:01 -0500
Subject: [PATCH] UPSTREAM: <carry>: add max_housekeeping_interval

OpenShift-Rebase-Source: 3b2555a9070
---
 cmd/kubelet/app/options/globalflags_linux.go |  1 +
 pkg/kubelet/cadvisor/cadvisor_linux.go       |  7 +++++++
 pkg/kubelet/kubelet.go                       | 16 ++++++++++++----
 3 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/cmd/kubelet/app/options/globalflags_linux.go b/cmd/kubelet/app/options/globalflags_linux.go
index e75e65ec37c..c2ba0d1bce3 100644
--- a/cmd/kubelet/app/options/globalflags_linux.go
+++ b/cmd/kubelet/app/options/globalflags_linux.go
@@ -42,6 +42,7 @@ func addCadvisorFlags(fs *pflag.FlagSet) {
 
 	// e2e node tests rely on this
 	register(global, local, "housekeeping_interval")
+	register(global, local, "max_housekeeping_interval")
 
 	// These flags were implicit from cadvisor, and are mistakes that should be registered deprecated:
 	const deprecated = "This is a cadvisor flag that was mistakenly registered with the Kubelet. Due to legacy concerns, it will follow the standard CLI deprecation timeline before being removed."
diff --git a/pkg/kubelet/cadvisor/cadvisor_linux.go b/pkg/kubelet/cadvisor/cadvisor_linux.go
index f4857f7cb08..0c823b584c5 100644
--- a/pkg/kubelet/cadvisor/cadvisor_linux.go
+++ b/pkg/kubelet/cadvisor/cadvisor_linux.go
@@ -59,10 +59,17 @@ const defaultHousekeepingInterval = 10 * time.Second
 const allowDynamicHousekeeping = true
 
 func init() {
+	maxHouseKeeping := maxHousekeepingInterval.String()
+	if value := os.Getenv("OPENSHIFT_MAX_HOUSEKEEPING_INTERVAL_DURATION"); value != "" {
+		klog.Infof("Detected OPENSHIFT_MAX_HOUSEKEEPING_INTERVAL_DURATION: %v", value)
+		maxHouseKeeping = value
+	}
 	// Override cAdvisor flag defaults.
 	flagOverrides := map[string]string{
 		// Override the default cAdvisor housekeeping interval.
 		"housekeeping_interval": defaultHousekeepingInterval.String(),
+		// Override the default max cAdvisor housekeeping interval.
+		"max_housekeeping_interval": maxHouseKeeping,
 		// Disable event storage by default.
 		"event_storage_event_limit": "default=0",
 		"event_storage_age_limit":   "default=0",
diff --git a/pkg/kubelet/kubelet.go b/pkg/kubelet/kubelet.go
index 141b666c714..2209a787dba 100644
--- a/pkg/kubelet/kubelet.go
+++ b/pkg/kubelet/kubelet.go
@@ -158,10 +158,6 @@ const (
 	// the cache.
 	runtimeCacheRefreshPeriod = housekeepingPeriod + housekeepingWarningDuration
 
-	// Period for performing eviction monitoring.
-	// ensure this is kept in sync with internal cadvisor housekeeping.
-	evictionMonitoringPeriod = time.Second * 10
-
 	// The path in containers' filesystems where the hosts file is mounted.
 	linuxEtcHostsPath   = "/etc/hosts"
 	windowsEtcHostsPath = "C:\\Windows\\System32\\drivers\\etc\\hosts"
@@ -210,8 +206,20 @@ var (
 	// ContainerLogsDir can be overwritten for testing usage
 	ContainerLogsDir = DefaultContainerLogsDir
 	etcHostsPath     = getContainerEtcHostsPath()
+	// Period for performing eviction monitoring.
+	// ensure this is kept in sync with internal cadvisor housekeeping.
+	evictionMonitoringPeriod = time.Second * 10
 )
 
+func init() {
+	if value := os.Getenv("OPENSHIFT_EVICTION_MONITORING_PERIOD_DURATION"); value != "" {
+		if duration, err := time.ParseDuration(value); err == nil {
+			klog.Infof("Detected OPENSHIFT_EVICTION_MONITORING_PERIOD_DURATION: %v", value)
+			evictionMonitoringPeriod = duration
+		}
+	}
+}
+
 func getContainerEtcHostsPath() string {
 	if sysruntime.GOOS == "windows" {
 		return windowsEtcHostsPath
-- 
2.43.0

