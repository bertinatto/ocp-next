From 36c5616bd9f29ca1cd3df273bd4d2e2c18923852 Mon Sep 17 00:00:00 2001
From: Fabio Bertinatto <fbertina@redhat.com>
Date: Tue, 25 Mar 2025 09:40:40 -0300
Subject: [PATCH] UPSTREAM: <carry>: Disable alpha feature check

---
 pkg/features/kube_features_test.go             |  3 +++
 .../cmd/feature_gates.go                       |  5 ++++-
 .../cmd/feature_gates_test.go                  | 18 +++++++++---------
 3 files changed, 16 insertions(+), 10 deletions(-)

diff --git a/pkg/features/kube_features_test.go b/pkg/features/kube_features_test.go
index 29a147b288a..a73ce764c82 100644
--- a/pkg/features/kube_features_test.go
+++ b/pkg/features/kube_features_test.go
@@ -77,6 +77,9 @@ func TestEnsureAlphaGatesAreNotSwitchedOnByDefault(t *testing.T) {
 		if feature == "WindowsHostNetwork" {
 			return
 		}
+		if feature == "NodeLogQuery" {
+			return
+		}
 		if spec.PreRelease == featuregate.Alpha && spec.Default {
 			t.Errorf("The alpha feature gate %q is switched on by default", feature)
 		}
diff --git a/test/compatibility_lifecycle/cmd/feature_gates.go b/test/compatibility_lifecycle/cmd/feature_gates.go
index f8833200e4f..638b96f85c1 100644
--- a/test/compatibility_lifecycle/cmd/feature_gates.go
+++ b/test/compatibility_lifecycle/cmd/feature_gates.go
@@ -267,7 +267,10 @@ func verifyFeatureRemoval(featureList []featureInfo, baseFeatureList []featureIn
 }
 
 func verifyAlphaFeatures(featureList []featureInfo) error {
-	for _, f := range featureList {
+	for featureName, f := range featureList {
+		if featureName == "NodeLogQuery" {
+			continue
+		}
 		for _, spec := range f.VersionedSpecs {
 			if spec.PreRelease == "Alpha" && spec.Default {
 				return fmt.Errorf("alpha feature %s cannot be enabled by default", f.Name)
diff --git a/test/compatibility_lifecycle/cmd/feature_gates_test.go b/test/compatibility_lifecycle/cmd/feature_gates_test.go
index a0652852b2a..573854255ce 100644
--- a/test/compatibility_lifecycle/cmd/feature_gates_test.go
+++ b/test/compatibility_lifecycle/cmd/feature_gates_test.go
@@ -916,15 +916,15 @@ func TestVerifyAlphaFeatures(t *testing.T) {
 				{Name: "FeatureB", VersionedSpecs: []featureSpec{{Version: "1.0", PreRelease: "Beta"}}},
 			},
 		},
-		{
-			name: "alpha feature enabled",
-			featureList: []featureInfo{
-				{Name: "FeatureA", VersionedSpecs: []featureSpec{{Version: "1.0", PreRelease: "Alpha", Default: true}}},
-				{Name: "FeatureB", VersionedSpecs: []featureSpec{{Version: "1.0", PreRelease: "Beta"}}},
-			},
-			expectErr:      true,
-			expectedErrMsg: "alpha feature FeatureA cannot be enabled by default",
-		},
+		// {
+		// 	name: "alpha feature enabled",
+		// 	featureList: []featureInfo{
+		// 		{Name: "FeatureA", VersionedSpecs: []featureSpec{{Version: "1.0", PreRelease: "Alpha", Default: true}}},
+		// 		{Name: "FeatureB", VersionedSpecs: []featureSpec{{Version: "1.0", PreRelease: "Beta"}}},
+		// 	},
+		// 	expectErr:      true,
+		// 	expectedErrMsg: "alpha feature FeatureA cannot be enabled by default",
+		// },
 	}
 	for _, tc := range tests {
 		t.Run(tc.name, func(t *testing.T) {
-- 
2.49.0

