From acd08c4d91b84a88e4bb16623c6f5865e6a37b79 Mon Sep 17 00:00:00 2001
From: Fabio Bertinatto <fbertina@redhat.com>
Date: Wed, 27 Nov 2024 13:30:00 -0300
Subject: [PATCH] UPSTREAM: <carry>: openshift-kube-apiserver: add
 openshift-kube-apiserver code

---
 openshift-kube-apiserver/openshiftkubeapiserver/patch.go    | 6 +++---
 .../openshiftkubeapiserver/sdn_readyz_wait.go               | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/openshift-kube-apiserver/openshiftkubeapiserver/patch.go b/openshift-kube-apiserver/openshiftkubeapiserver/patch.go
index 8b2dae53fc0..ce029240f67 100644
--- a/openshift-kube-apiserver/openshiftkubeapiserver/patch.go
+++ b/openshift-kube-apiserver/openshiftkubeapiserver/patch.go
@@ -62,7 +62,7 @@ func OpenShiftKubeAPIServerConfigPatch(genericConfig *genericapiserver.Config, k
 	// ADMISSION
 	clusterQuotaMappingController := newClusterQuotaMappingController(kubeInformers.Core().V1().Namespaces(), openshiftInformers.OpenshiftQuotaInformers.Quota().V1().ClusterResourceQuotas())
 	genericConfig.AddPostStartHookOrDie("quota.openshift.io-clusterquotamapping", func(context genericapiserver.PostStartHookContext) error {
-		go clusterQuotaMappingController.Run(5, context.StopCh)
+		go clusterQuotaMappingController.Run(5, context.Done())
 		return nil
 	})
 
@@ -95,7 +95,7 @@ func OpenShiftKubeAPIServerConfigPatch(genericConfig *genericapiserver.Config, k
 	}
 	apiRequestCountController := apirequestcount.NewController(apiserverClient.APIRequestCounts(), nodeFor())
 	genericConfig.AddPostStartHook("openshift.io-api-request-count-filter", func(context genericapiserver.PostStartHookContext) error {
-		go apiRequestCountController.Start(context.StopCh)
+		go apiRequestCountController.Start(context.Done())
 		return nil
 	})
 	genericConfig.BuildHandlerChainFunc, err = BuildHandlerChain(
@@ -113,7 +113,7 @@ func OpenShiftKubeAPIServerConfigPatch(genericConfig *genericapiserver.Config, k
 	genericConfig.ReadyzChecks = append(genericConfig.ReadyzChecks, openshiftAPIServiceReachabilityCheck, oauthAPIServiceReachabilityCheck)
 
 	genericConfig.AddPostStartHookOrDie("openshift.io-startkubeinformers", func(context genericapiserver.PostStartHookContext) error {
-		go openshiftInformers.Start(context.StopCh)
+		go openshiftInformers.Start(context.Done())
 		return nil
 	})
 	genericConfig.AddPostStartHookOrDie("openshift.io-openshift-apiserver-reachable", func(context genericapiserver.PostStartHookContext) error {
diff --git a/openshift-kube-apiserver/openshiftkubeapiserver/sdn_readyz_wait.go b/openshift-kube-apiserver/openshiftkubeapiserver/sdn_readyz_wait.go
index e89298cdc2d..98f22c86fb4 100644
--- a/openshift-kube-apiserver/openshiftkubeapiserver/sdn_readyz_wait.go
+++ b/openshift-kube-apiserver/openshiftkubeapiserver/sdn_readyz_wait.go
@@ -162,7 +162,7 @@ func (c *aggregatedAPIServiceAvailabilityCheck) checkForConnection(context gener
 		// if we timeout, always return ok so that we can start from a case where all kube-apiservers are down and the SDN isn't coming up
 		utilruntime.HandleError(fmt.Errorf("%s never reached apiserver", c.Name()))
 		return
-	case <-context.StopCh:
+	case <-context.Done():
 		utilruntime.HandleError(fmt.Errorf("%s interrupted", c.Name()))
 		return
 	case <-noAggregatedAPIServer:
-- 
2.47.0

